---
# Example Organization Configuration
# Copy this file and customize for your organization

metadata:
  name: "example-organization"
  description: "Example AWS Organization for testing and development"
  version: "1.0.0"

# Environment-specific configuration
environments:
  dev:
    target: localstack
    endpoint: http://localhost:4566
    region: us-east-1
    profile: null
    
  qa:
    target: aws
    profile: example-qa-profile
    region: us-west-2
    
  prod:
    target: aws
    profile: example-prod-profile
    region: us-west-2

# Core organization settings
organization:
  feature_set: ALL
  default_region: us-west-2
  allowed_regions: [us-west-2, us-east-1]
  
  # AWS service access for organization features
  service_access_principals:
    - sso.amazonaws.com
    - cloudtrail.amazonaws.com
    - guardduty.amazonaws.com
    - securityhub.amazonaws.com
    - config.amazonaws.com

# Organizational Units structure
organizational_units:
  - name: Security
    description: Security and compliance related accounts
    
  - name: SharedServices
    description: Shared infrastructure and services
    
  - name: Businesses
    description: Business workload accounts
    
  - name: Sandbox
    description: Development and experimental accounts

# AWS Accounts to create
accounts:
  # Security accounts
  - name: security-tooling
    email: security@example.com
    ou: Security
    description: Security tooling, GuardDuty, Security Hub
    
  - name: log-archive
    email: logs@example.com
    ou: Security
    description: Centralized log archive for CloudTrail and other logs
    
  # Shared services
  - name: shared-services
    email: shared@example.com
    ou: SharedServices
    description: Shared DNS, networking, CI/CD infrastructure
    
  # Business accounts
  - name: production
    email: prod@example.com
    ou: Businesses
    description: Production workloads
    
  - name: staging
    email: staging@example.com
    ou: Businesses
    description: Staging environment for testing
    
  # Sandbox
  - name: development
    email: dev@example.com
    ou: Sandbox
    description: Development sandbox for experimentation

# Organization policies
policies:
  # Tag policies for consistent tagging
  tag_policies:
    - name: StandardTags
      description: Standard tagging policy for all resources
      required_tags:
        - Environment
        - BusinessUnit
        - Owner
        - CostCenter
      tag_values:
        Environment: [dev, staging, prod, sandbox]
        BusinessUnit: [security, shared-services, business, sandbox]
        
  # Service Control Policies
  service_control_policies:
    - name: baseline_security
      description: Baseline security restrictions
      policies:
        - prevent_org_changes
        - region_restrictions
        - prevent_security_service_disabling
        
    - name: prevent_public_s3
      description: Prevent public S3 bucket creation
      
# SSO Configuration
sso:
  enabled: true
  
  permission_sets:
    - name: PowerUser
      description: Power user access for developers
      managed_policies:
        - arn:aws:iam::aws:policy/PowerUserAccess
      session_duration: PT12H
      
    - name: ReadOnly
      description: Read-only access for auditors
      managed_policies:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      session_duration: PT8H
      
    - name: SecurityAuditor
      description: Security auditing access
      managed_policies:
        - arn:aws:iam::aws:policy/SecurityAudit
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      session_duration: PT8H
      
    - name: Billing
      description: Billing and cost management access
      managed_policies:
        - arn:aws:iam::aws:policy/job-function/Billing
      session_duration: PT4H

  # Group assignments (create these groups in Identity Center first)
  group_assignments:
    - group_name: Engineers
      permission_set: PowerUser
      accounts: [production, staging, development]
      
    - group_name: Administrators
      permission_set: PowerUser
      accounts: [security-tooling, log-archive, shared-services, production, staging, development]
      
    - group_name: Security
      permission_set: SecurityAuditor
      accounts: [security-tooling, log-archive, production, staging]
      
    - group_name: Finance
      permission_set: Billing
      accounts: [management]  # management account for billing

# GitHub Actions OIDC configuration
github_actions:
  enabled: true
  
  # GitHub repositories that can assume roles
  repositories:
    - repo: example-org/infrastructure
      environments: [dev, qa, prod]
      
    - repo: example-org/applications
      environments: [dev, qa, prod]
      
  # Permissions for each environment
  permissions:
    dev:
      accounts: [development, shared-services]
      policies: [arn:aws:iam::aws:policy/PowerUserAccess]
      
    qa:
      accounts: [staging, shared-services]
      policies: [arn:aws:iam::aws:policy/PowerUserAccess]
      
    prod:
      accounts: [production, shared-services]
      policies: [arn:aws:iam::aws:policy/ReadOnlyAccess]  # More restrictive for prod

# Security baseline configuration  
security:
  # CloudTrail organization trail
  cloudtrail:
    enabled: true
    multi_region: true
    include_global_service_events: true
    enable_log_file_validation: true
    log_retention_days: 90
    
  # GuardDuty
  guardduty:
    enabled: true
    auto_enable_organization_members: true
    
  # Security Hub
  security_hub:
    enabled: true
    auto_enable_organization_members: true
    standards:
      - aws-foundational-security-best-practices
      - cis-aws-foundations-benchmark
      
  # Config
  config:
    enabled: true
    all_regions: true
    include_global_resource_types: true

# Cost management
cost_management:
  # Budget alerts
  budgets:
    - name: monthly-budget
      limit: 1000
      unit: USD
      time_period: MONTHLY
      alerts:
        - threshold: 80
          notification_emails: [finance@example.com]
        - threshold: 100
          notification_emails: [finance@example.com, admin@example.com]

# Backup configuration
backup:
  # Organization-wide backup policies
  policies:
    - name: daily-backup
      resources: [ec2, rds, efs]
      schedule: cron(0 5 * * ? *)
      retention: 30
